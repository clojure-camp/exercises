{:title "powerset"
 :category :TODO
 :difficulty :TODO
 :instructions ["Write a function to calculate the powerset of a given input set."
                "A powerset of a set, is all possible subsets. See test examples."
                "Notice: The powerset of [1,2] is the powerset of [1] plus the powerset of [1] with 2 added to each."]
 :function-template (defn powerset [coll])
 :test-cases [{:input (powerset #{})
               :output #{#{}}}
              {:input (powerset #{1})
               :output #{#{} #{1}}}
              {:input (powerset #{1 2})
               :output #{#{} #{1} #{2} #{1 2}}}
              {:input (powerset #{1 2 3})
               :output #{#{} #{1} #{2} #{1 2} #{3} #{1 3} #{2 3} #{1 2 3}}}]
 :uses #{:recursion}
 :solution [(defn powerset
              [input-set]
              (if (empty? input-set)
                #{#{}}
                (let [f (first input-set)
                      lower-order-set (powerset (rest input-set))]
                  (into lower-order-set
                        (map (fn [s]
                               (conj s f))
                             lower-order-set)))))]}
